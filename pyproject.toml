[project]
name = "pynipe"
# version is now managed by hatch-vcs
dynamic = ["version"]
description = "A neuroimaging workflow library that builds upon Nipype's interfaces"
readme = "README.md"
authors = [
    { name = "Andrew Van", email = "andrew.van@turingmedical.com" }
]
requires-python = ">=3.10"
dependencies = [
    "concurrent-log-handler>=0.9.25",
    "networkx>=3.4.2",
    "nipype>=1.10.0",
    "numpy>=2.2.5",
    "rich>=14.0.0",
]

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"

[project.optional-dependencies]
dev = [
    "black>=25.1.0",
    "hatch-vcs>=0.3.0",
    "isort>=6.0.1",
    "pre-commit>=3.6.0",
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "ruff>=0.11.6",
]
visualization = [
    "matplotlib>=3.10.1",
    "plotly>=6.0.1",
]

[tool.black]
line-length = 120
target-version = ["py310", "py311", "py312"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 120
target-version = "py310"
exclude = [
    ".git",
    ".ruff_cache",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "node_modules",
]

[tool.ruff.lint]
select = ["E", "F", "I", "W", "N", "B", "C4", "UP", "S", "BLE", "A", "C", "T", "PT", "RET", "SIM"]
ignore = ["E203", "E501", "S101", "C901"]  # Ignore assert statements in tests and complexity issues

[tool.ruff.lint.per-file-ignores]
"examples/*" = ["T201"]  # Ignore print statements in example files

[tool.ruff.lint.isort]
known-first-party = ["pynipe"]

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 120
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
